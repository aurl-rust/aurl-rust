name: Rust

on: [push]


env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - x86_64-pc-windows-gnu
          - aarch64-apple-darwin
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        target: ${{ matrix.target }}
        override: true
    - uses: Swatinem/rust-cache@v1
    - name: install cargo subcommands
      run:  rustup component add rustfmt clippy
    - name: Rust fmt and clippy
      run: cargo fmt && cargo clippy -- -D warnings
    - name: Run tests
      run: cargo test --verbose
    - name: Build release version
      run: cargo build --verbose --release --target=${{ matrix.target }}
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    - uses: actions/upload-artifact@v2
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      with:
        name: aurl-rust-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/aurl-rust

  create-release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - id: create-release
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - run: |
          echo '${{ steps.create-release.outputs.upload_url }}' > release_upload_url.txt
      - uses: actions/upload-artifact@v1
        with:
          name: create-release
          path: release_upload_url.txt
  
  release-asset:
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - x86_64-pc-windows-gnu
          - aarch64-apple-darwin
        include:
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest

    needs: [create-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: create-release
      - id: upload-url
        run: |
          echo "::set-output name=url::$(cat create-release/release_upload_url.txt)"
      - uses: actions/download-artifact@v1
        with:
          name: build-${{ matrix.target }}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.upload-url.outputs.url }}
          asset_path: ./build-${{ matrix.target }}/aurl-rust-${{ matrix.target }}
          asset_name: aurl-rust-${{ matrix.target }}.zip
          asset_content_type: application/zip

